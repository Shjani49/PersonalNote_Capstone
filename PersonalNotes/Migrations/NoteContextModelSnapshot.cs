// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PersonalNotes.Controllers;

namespace PersonalNotes.Migrations
{
    [DbContext(typeof(NoteContext))]
    partial class NoteContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("PersonalNotes.Models.Notes", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int(10)");

                    b.Property<DateTime>("Date")
                        .HasColumnName("date")
                        .HasColumnType("DateTime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnName("Note")
                        .HasColumnType("varchar(200)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_general_ci");

                    b.Property<int>("UserID")
                        .HasColumnName("UserId")
                        .HasColumnType("int(10)");

                    b.HasKey("ID");

                    b.HasIndex("UserID")
                        .HasName("FK_Notes_User");

                    b.ToTable("notes");

                    b.HasData(
                        new
                        {
                            ID = -1,
                            Date = new DateTime(2020, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Lorem Ipsum is simply dummy text of the printing and typesetting industry.",
                            UserID = -1
                        },
                        new
                        {
                            ID = -2,
                            Date = new DateTime(2020, 8, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Lorem Ipsum is simply dummy text of the printing and typesetting industry.",
                            UserID = -2
                        },
                        new
                        {
                            ID = -3,
                            Date = new DateTime(2020, 9, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Lorem Ipsum is simply dummy text of the printing and typesetting industry.",
                            UserID = -3
                        });
                });

            modelBuilder.Entity("PersonalNotes.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int(10)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("email")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_general_ci");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnName("fname")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_general_ci");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnName("lname")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_general_ci");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("password")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_general_ci");

                    b.HasKey("ID");

                    b.ToTable("user");

                    b.HasData(
                        new
                        {
                            ID = -1,
                            Email = "sjani@ualberta.ca",
                            FirstName = "Shivani",
                            LastName = "Jani",
                            Password = "abc@123"
                        },
                        new
                        {
                            ID = -2,
                            Email = "shailza@ualberta.ca",
                            FirstName = "Shailza",
                            LastName = "Sharma",
                            Password = "xyz@123"
                        },
                        new
                        {
                            ID = -3,
                            Email = "hkour@ualberta.ca",
                            FirstName = "Harpreet",
                            LastName = "Kour",
                            Password = "pqr@123"
                        });
                });

            modelBuilder.Entity("PersonalNotes.Models.Notes", b =>
                {
                    b.HasOne("PersonalNotes.Models.User", "Users")
                        .WithMany("Notes")
                        .HasForeignKey("UserID")
                        .HasConstraintName("FK_Notes_User")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
